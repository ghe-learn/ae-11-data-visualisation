---
title: "Application Exercise 11 - Data Visualisation"
author: "Lars Sch√∂bitz"
format:
  html:
    toc: true
editor: visual
editor_options: 
  chunk_output_type: console
execute:
  echo: true
  message: false
  warning: false
---

```{r}

# R Packages that are required for this script are loaded in the beginning

library(readr)
library(dplyr)
library(ggplot2)

# An R package to access the World Bank World Development Indicator timeseries

library(WDI)

# An R package for working with country codes

library(countrycode)

# An R Package to work with model outputs

library(broom)

```

# Data import

## What a waste!

https://datacatalog.worldbank.org/search/dataset/0039597

```{r}

# This code is copied from application exercise week 10

global_waste_data <- read_csv("data/raw_data/country_level_data_0.csv")
```

## World Development Indicators (WDI)

GitHub repo: https://github.com/vincentarelbundock/WDI R Package Documentation: http://vincentarelbundock.github.io/WDI/

```{r}


WDIsearch("GDP per capita ")

gdp_data <- WDI(indicator = "NY.GDP.PCAP.CD", start = 2019, end = 2019) 


```

# Data tidying

## Waste data

```{r}

# This code is copied from application exercise week 10

global_waste_data_small <- global_waste_data %>% 
  select(country_name, 
         iso3c, 
         income_id, 
         total_msw_total_msw_generated_tons_year, 
         population_population_number_of_people) %>%  
  rename(msw_tons_year = total_msw_total_msw_generated_tons_year,
         population = population_population_number_of_people) 

```

## GDP data

```{r}

gdp_data_tidy <- gdp_data %>% 
  as_tibble() %>% 
  rename(gdp_capita = NY.GDP.PCAP.CD)

```

# Data transformation

## Waste data

```{r}

# This code is copied from application exercise week 10

global_waste_data_kg_year <- global_waste_data_small %>% 
  mutate(capita_kg_year = msw_tons_year / population * 1000) %>% 
  mutate(income_id = factor(income_id, 
                            levels = c("HIC", "UMC", "LMC", "LIC"))) %>% 
  # select relevant columns
  select(country_name:income_id, capita_kg_year)

```

## GDP data

```{r}

gdp_data_join <- gdp_data_tidy %>%
  mutate(iso3c = countrycode(iso2c, origin = "iso2c", destination = "iso3c")) %>% 
  filter(!is.na(iso3c)) 

```

## Joining two datasets

```{r}

waste_gdp_data <- global_waste_data_kg_year %>% 
  left_join(gdp_data_join) %>% 
  select(country_name:capita_kg_year, gdp_capita, year)

```

## Saving derived data

```{r}
write_csv(x = waste_gdp_data, file = "data/derived_data/waste-generation-gdp-data.csv")
```

# Data visualisation

## Aesthetic mappings

```{r}

ggplot(data = waste_gdp_data,
       mapping = aes(x = gdp_capita, 
                     y = capita_kg_year)) +
  geom_point()

```

```{r}

ggplot(data = waste_gdp_data,
       mapping = aes(x = gdp_capita, 
                     y = capita_kg_year,
                     color = income_id,
                     shape = income_id)) +
  geom_point()

```

## Scaling

### Axis scales

```{r}

library(scales)

ggplot(data = waste_gdp_data,
       mapping = aes(x = gdp_capita, 
                     y = capita_kg_year,
                     color = income_id,
                     shape = income_id)) +
  geom_point() +
  
  # https://scales.r-lib.org/reference/label_log.html
  scale_x_log10(labels = scales::label_log(), limits = c(100, 150000))  +
  scale_y_continuous(breaks = seq(0, 1400, 200), limits = c(0, 1400)) 


seq(from = 0, to = 1400, by = 200)
c(0, 1400)

```

### Color scales

-   scale_color_brewer()

```{r}

ggplot(data = waste_gdp_data,
       mapping = aes(x = gdp_capita, 
                     y = capita_kg_year,
                     color = income_id,
                     shape = income_id)) +
  geom_point() +
  
  # https://scales.r-lib.org/reference/label_log.html
  scale_x_log10(labels = scales::label_log(), limits = c(100, 150000))  +
  scale_y_continuous(breaks = seq(0, 1400, 200), limits = c(0, 1400)) +
  scale_color_brewer(type = "qual", palette = "Set2")

```

-   scale_color_manual()

```{r}

my_colors <- c("#ED6D37", "#901C6C", "#18A5C5", "#A6CE8F")

ggplot(data = waste_gdp_data,
       mapping = aes(x = gdp_capita, 
                     y = capita_kg_year,
                     color = income_id,
                     shape = income_id)) +
  geom_point() +
  
  # https://scales.r-lib.org/reference/label_log.html
  scale_x_log10(labels = scales::label_log(), limits = c(100, 150000))  +
  scale_y_continuous(breaks = seq(0, 1400, 200), limits = c(0, 1400)) +
  scale_color_manual(values = my_colors)

```

## Geoms

-   defined globally in ggplot

```{r}

ggplot(data = waste_gdp_data,
       mapping = aes(x = gdp_capita, 
                     y = capita_kg_year,
                     color = income_id,
                     shape = income_id)) +
  geom_point(size = 3, alpha = 3/4) +
  geom_smooth(method = "lm", se = FALSE) +
  
  # https://scales.r-lib.org/reference/label_log.html
  scale_x_log10(labels = scales::label_log(), limits = c(100, 150000))  +
  scale_y_continuous(breaks = seq(0, 1400, 200), limits = c(0, 1400)) +
  scale_color_manual(values = my_colors)

```

-   defined for a geom only
-   geom_text

```{r}

waste_gdp_data_filter <- waste_gdp_data %>% 
  filter(capita_kg_year > 850 | 
           country_name == "Switzerland" |
           country_name == "Canada")

ggplot(data = waste_gdp_data,
       mapping = aes(x = gdp_capita, 
                     y = capita_kg_year)) +
  geom_point(size = 3, alpha = 3/4, 
             mapping = aes(color = income_id,
                           shape = income_id)) +
  geom_smooth(method = "lm", 
              se = FALSE, 
              color = "gray20", 
              linetype = "longdash") +
  geom_text(data = waste_gdp_data_filter,
            mapping = aes(label = country_name), 
            nudge_y = 50) +
  
  # https://scales.r-lib.org/reference/label_log.html
  scale_x_log10(labels = scales::label_log(), limits = c(100, 150000))  +
  scale_y_continuous(breaks = seq(0, 1400, 200), limits = c(0, 1500)) +
  scale_color_manual(values = my_colors)


```

## Labels

```{r}


ggplot(data = waste_gdp_data,
       mapping = aes(x = gdp_capita, 
                     y = capita_kg_year)) +
  geom_point(size = 3, alpha = 3/4, 
             mapping = aes(color = income_id,
                           shape = income_id)) +
  geom_smooth(method = "lm", 
              se = FALSE, 
              color = "gray20", 
              linetype = "longdash") +
  geom_text(data = waste_gdp_data_filter,
            mapping = aes(label = country_name), 
            nudge_y = 50) +
  
  # https://scales.r-lib.org/reference/label_log.html
  scale_x_log10(labels = scales::label_log(), limits = c(100, 150000))  +
  scale_y_continuous(breaks = seq(0, 1400, 200), limits = c(0, 1400)) +
  scale_color_manual(values = my_colors) +
  labs(title = "Municipal Solid Waste Generation",
       subtitle = "Increasing income results in greater solid waste generation",
       x = "GDP per capity (USD)",
       y = "MSW generation pert capity (kg/yr)",
       color = "Income categories",
       shape = "Income categories",
       caption = "Data: World Bank World Development Indicators and What a Waste Global Database."
  ) 


```

## Theme

A reference to @fig-plot-waste-gdp.

```{r}

#| label: fig-plot-waste-gdp
#| fig-cap: "Global Municipal Solid Waste generation over GPD per capita, illustrated by defined income groups."

ggplot(data = waste_gdp_data,
       mapping = aes(x = gdp_capita, 
                     y = capita_kg_year)) +
  geom_point(size = 3, alpha = 3/4, 
             mapping = aes(color = income_id,
                           shape = income_id)) +
  geom_smooth(method = "lm", 
              se = FALSE, 
              color = "gray20", 
              linetype = "longdash") +
  geom_text(data = waste_gdp_data_filter,
            mapping = aes(label = country_name), 
            nudge_y = 50) +
  
  # https://scales.r-lib.org/reference/label_log.html
  scale_x_log10(labels = scales::label_log(), limits = c(100, 150000))  +
  scale_y_continuous(breaks = seq(0, 1400, 200), limits = c(0, 1400)) +
  scale_color_manual(values = my_colors) +
  labs(title = "Municipal Solid Waste Generation",
       subtitle = "Increasing income results in greater solid waste generation",
       x = "GDP per capity (USD)",
       y = "MSW generation pert capity (kg/yr)",
       color = "Income categories",
       shape = "Income categories",
       caption = "Data: World Bank World Development Indicators and What a Waste Global Database."
  ) +
  theme_minimal(base_size = 12, base_family = "Arial") +
  theme(legend.position = c(0.20, 0.80),
        plot.title.position = "plot",
        plot.caption = element_text(face = "italic", color = "grey70"),
        legend.background = element_rect(fill = "white", colour = "grey50"),
        panel.grid.minor = element_blank()) 
```

# Data modeling

-   https://broom.tidymodels.org/articles/broom.html

```{r}

lmfit <- lm(capita_kg_year ~ gdp_capita, data = waste_gdp_data)

summary(lmfit)

tidy(lmfit) %>% 
  knitr::kable(digits = 2)

glance(lmfit) %>% 
  knitr::kable(digits = 2)


```

# Data communication

Let's add a table of contents and an author with affiliation to the document.

You can learn more about the options for HTML files in the Quarto documentation: https://quarto.org/docs/reference/formats/html.html
